using ExploitationApi.Data;
using ExploitationApi.Models;
using Microsoft.AspNetCore.Hosting;
using Microsoft.EntityFrameworkCore;
using Microsoft.Extensions.Options;
using Microsoft.Extensions.DependencyInjection;
using System.Text.Json.Serialization;
using ExploitationApi.Repositories;
using ExploitationApi.Interfaces;
using ExploitationApi.DTOs;

var builder = WebApplication.CreateBuilder(args);


// Add services to the container.

/*builder.Services.AddControllers().AddJsonOptions(options =>
{
    options.JsonSerializerOptions.ReferenceHandler = ReferenceHandler.Preserve;
    options.JsonSerializerOptions.DefaultIgnoreCondition = JsonIgnoreCondition.WhenWritingNull;
    options.JsonSerializerOptions.ReferenceHandler = ReferenceHandler.IgnoreCycles;
    options.JsonSerializerOptions.PropertyNamingPolicy = System.Text.Json.JsonNamingPolicy.CamelCase;
});*/

builder.Services.AddControllers().AddNewtonsoftJson(options =>{
        options.SerializerSettings.ReferenceLoopHandling = Newtonsoft.Json.ReferenceLoopHandling.Ignore;
    });
// Learn more about configuring Swagger/OpenAPI at https://aka.ms/aspnetcore/swashbuckle
builder.Services.AddEndpointsApiExplorer();
builder.Services.AddSwaggerGen();

/*register the connection string to sqlserver*/
var connectionString = builder.Configuration.GetConnectionString("DefaultConnection");

/*register the dbContext*/
builder.Services.AddDbContext<ApiDbContext>(options => options.UseSqlServer(connectionString));

/*map repositories*/
builder.Services.AddScoped<IRepo<GroupRequestDTO,Group>, GroupRepo>();
builder.Services.AddScoped<IRepo<ServiceRequestDTO, Service>, ServiceRepo>();
builder.Services.AddScoped<IRepo<ProcedureRequestDTO, Procedure>, ProcedureRepo>();
builder.Services.AddScoped<IRepo<StepRequestDTO, Step>, StepRepo>();
builder.Services.AddScoped<IRepo<StepResourceRequestDTO, StepResource>, StepResourceRepo>();
builder.Services.AddScoped<IRepo<UserRequestDTO, User>, UserRepo>();


var app = builder.Build();

// Configure the HTTP request pipeline.
if (app.Environment.IsDevelopment())
{
    app.UseSwagger();
    app.UseSwaggerUI();
}

app.UseCors(x => x
            .AllowAnyOrigin()
            .AllowAnyMethod()
            .AllowAnyHeader());

app.UseHttpsRedirection();

app.UseAuthorization();

app.MapControllers();

app.Run();
